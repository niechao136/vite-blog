import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.Dn5wLSyf.js";const c=JSON.parse('{"title":"如何将 VitePress 项目部署到 GitHub Pages","description":"手把手教你如何使用 GitHub Pages 免费托管 VitePress 静态站点","frontmatter":{"title":"如何将 VitePress 项目部署到 GitHub Pages","date":"2025-05-27T00:00:00.000Z","tags":["vitepress","部署","github-pages"],"description":"手把手教你如何使用 GitHub Pages 免费托管 VitePress 静态站点"},"headers":[],"relativePath":"posts/2025/vite-deploy-github-pages.md","filePath":"posts/2025/vite-deploy-github-pages.md"}'),n={name:"posts/2025/vite-deploy-github-pages.md"};function p(l,s,h,o,d,r){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="如何将-vitepress-项目部署到-github-pages" tabindex="-1">如何将 VitePress 项目部署到 GitHub Pages <a class="header-anchor" href="#如何将-vitepress-项目部署到-github-pages" aria-label="Permalink to &quot;如何将 VitePress 项目部署到 GitHub Pages&quot;">​</a></h1><p>VitePress 是一个基于 Vite 构建的静态站点生成器，非常适合构建文档和博客。</p><p>本篇文章将介绍如何从零部署一个 VitePress 项目到 GitHub Pages。</p><hr><h2 id="第一步-项目结构准备" tabindex="-1">第一步：项目结构准备 <a class="header-anchor" href="#第一步-项目结构准备" aria-label="Permalink to &quot;第一步：项目结构准备&quot;">​</a></h2><p>假设你的项目结构如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>my-blog/</span></span>
<span class="line"><span>├── docs/</span></span>
<span class="line"><span>│   └── index.md</span></span>
<span class="line"><span>├── .vitepress/</span></span>
<span class="line"><span>│   └── config.ts</span></span>
<span class="line"><span>├── package.json</span></span></code></pre></div><hr><h2 id="第二步-安装-gh-pages" tabindex="-1">第二步：安装 gh-pages <a class="header-anchor" href="#第二步-安装-gh-pages" aria-label="Permalink to &quot;第二步：安装 gh-pages&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gh-pages</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div><hr><h2 id="第三步-配置构建与部署脚本" tabindex="-1">第三步：配置构建与部署脚本 <a class="header-anchor" href="#第三步-配置构建与部署脚本" aria-label="Permalink to &quot;第三步：配置构建与部署脚本&quot;">​</a></h2><p>在 <code>package.json</code> 中添加以下命令：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress dev docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress build docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;preview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress preview docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;deploy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gh-pages -d docs/.vitepress/dist&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h2 id="第四步-设置基础路径" tabindex="-1">第四步：设置基础路径 <a class="header-anchor" href="#第四步-设置基础路径" aria-label="Permalink to &quot;第四步：设置基础路径&quot;">​</a></h2><p>如果你的仓库名为 <code>my-blog</code>，你需要在 <code>config.ts</code> 中设置 <code>base</code>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  base: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/my-blog/&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>否则你的网站资源路径会出错。</p><hr><h2 id="第五步-部署到-github-pages" tabindex="-1">第五步：部署到 GitHub Pages <a class="header-anchor" href="#第五步-部署到-github-pages" aria-label="Permalink to &quot;第五步：部署到 GitHub Pages&quot;">​</a></h2><p>执行以下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span></span></code></pre></div><p><code>gh-pages</code> 会自动将构建后的 <code>dist</code> 文件夹发布到 <code>gh-pages</code> 分支。</p><hr><h2 id="第六步-启用-github-pages" tabindex="-1">第六步：启用 GitHub Pages <a class="header-anchor" href="#第六步-启用-github-pages" aria-label="Permalink to &quot;第六步：启用 GitHub Pages&quot;">​</a></h2><ol><li>打开你的 GitHub 仓库页面</li><li>点击 Settings &gt; Pages</li><li>选择分支为 <code>gh-pages</code>，文件夹为 <code>/（root）</code></li><li>保存后会生成一个 URL，例如：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://yourusername.github.io/my-blog/</span></span></code></pre></div><hr><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="❓-页面资源-404" tabindex="-1">❓ 页面资源 404？ <a class="header-anchor" href="#❓-页面资源-404" aria-label="Permalink to &quot;❓ 页面资源 404？&quot;">​</a></h3><p>检查你的 <code>config.ts</code> 中的 <code>base</code> 是否以 <code>/仓库名/</code> 格式设置。</p><hr><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>通过 GitHub Pages，我们可以免费、稳定地托管一个 VitePress 网站。结合 Markdown 写作 + Git 管理，非常适合博客、文档或个人主页用途。</p>`,35)]))}const g=a(n,[["render",p]]);export{c as __pageData,g as default};
